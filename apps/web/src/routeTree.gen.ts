/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthSignInRouteImport } from './routes/_auth/sign-in'
import { Route as AuthSignUpRouteImport } from './routes/_auth/sign-up'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as ProtectedProfileEditRouteImport } from './routes/_protected/profile/edit'
import { Route as ProtectedProfileIndexRouteImport } from './routes/_protected/profile/index'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AdminDashboardRouteImport } from './routes/admin/dashboard'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NotAuthorizedRouteImport } from './routes/not-authorized'

const NotAuthorizedRoute = NotAuthorizedRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/not-authorized',
  path: '/not-authorized',
} as any)
const AboutRoute = AboutRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/about',
  path: '/about',
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/_protected',
} as any)
const AuthRoute = AuthRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/_auth',
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/admin',
  path: '/admin',
} as any)
const IndexRoute = IndexRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/',
  path: '/',
} as any)
const AdminDashboardRoute = AdminDashboardRouteImport.update({
  getParentRoute: () => AdminRouteRoute,
  id: '/dashboard',
  path: '/dashboard',
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  getParentRoute: () => AuthRoute,
  id: '/sign-up',
  path: '/sign-up',
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  getParentRoute: () => AuthRoute,
  id: '/sign-in',
  path: '/sign-in',
} as any)
const ProtectedProfileIndexRoute = ProtectedProfileIndexRouteImport.update({
  getParentRoute: () => ProtectedRoute,
  id: '/profile/',
  path: '/profile/',
} as any)
const ProtectedProfileEditRoute = ProtectedProfileEditRouteImport.update({
  getParentRoute: () => ProtectedRoute,
  id: '/profile/edit',
  path: '/profile/edit',
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/not-authorized': typeof NotAuthorizedRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/profile/edit': typeof ProtectedProfileEditRoute
  '/profile': typeof ProtectedProfileIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/not-authorized': typeof NotAuthorizedRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/profile/edit': typeof ProtectedProfileEditRoute
  '/profile': typeof ProtectedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/about': typeof AboutRoute
  '/not-authorized': typeof NotAuthorizedRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/_protected/profile/edit': typeof ProtectedProfileEditRoute
  '/_protected/profile/': typeof ProtectedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/about'
    | '/not-authorized'
    | '/sign-in'
    | '/sign-up'
    | '/admin/dashboard'
    | '/profile/edit'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/about'
    | '/not-authorized'
    | '/sign-in'
    | '/sign-up'
    | '/admin/dashboard'
    | '/profile/edit'
    | '/profile'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/_auth'
    | '/_protected'
    | '/about'
    | '/not-authorized'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/admin/dashboard'
    | '/_protected/profile/edit'
    | '/_protected/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AboutRoute: typeof AboutRoute
  NotAuthorizedRoute: typeof NotAuthorizedRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/not-authorized': {
      id: '/not-authorized'
      path: '/not-authorized'
      fullPath: '/not-authorized'
      preLoaderRoute: typeof NotAuthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_protected/profile/': {
      id: '/_protected/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/profile/edit': {
      id: '/_protected/profile/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof ProtectedProfileEditRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface AdminRouteRouteChildren {
  AdminDashboardRoute: typeof AdminDashboardRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminDashboardRoute: AdminDashboardRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(AdminRouteRouteChildren)

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedRouteChildren {
  ProtectedProfileEditRoute: typeof ProtectedProfileEditRoute
  ProtectedProfileIndexRoute: typeof ProtectedProfileIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedProfileEditRoute: ProtectedProfileEditRoute,
  ProtectedProfileIndexRoute: ProtectedProfileIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(ProtectedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AboutRoute: AboutRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  IndexRoute: IndexRoute,
  NotAuthorizedRoute: NotAuthorizedRoute,
  ProtectedRoute: ProtectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
