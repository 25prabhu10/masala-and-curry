/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as appauthRouteRouteImport } from './routes/(app)/(auth)/route'
import { Route as appauthSignInRouteImport } from './routes/(app)/(auth)/sign-in'
import { Route as appauthSignUpRouteImport } from './routes/(app)/(auth)/sign-up'
import { Route as appprotectedProfileEditRouteImport } from './routes/(app)/(protected)/profile/edit'
import { Route as appprotectedProfileIndexRouteImport } from './routes/(app)/(protected)/profile/index'
import { Route as appprotectedRouteRouteImport } from './routes/(app)/(protected)/route'
import { Route as appAboutRouteImport } from './routes/(app)/about'
import { Route as appIndexRouteImport } from './routes/(app)/index'
import { Route as appNotAuthorizedRouteImport } from './routes/(app)/not-authorized'
import { Route as appRouteRouteImport } from './routes/(app)/route'
import { Route as DashboardCategoriesRouteImport } from './routes/dashboard/categories'
import { Route as DashboardMenuRouteImport } from './routes/dashboard/menu'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/dashboard',
  path: '/dashboard',
} as any)
const appRouteRoute = appRouteRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/(app)',
} as any)
const appIndexRoute = appIndexRouteImport.update({
  getParentRoute: () => appRouteRoute,
  id: '/',
  path: '/',
} as any)
const DashboardMenuRoute = DashboardMenuRouteImport.update({
  getParentRoute: () => DashboardRouteRoute,
  id: '/menu',
  path: '/menu',
} as any)
const DashboardCategoriesRoute = DashboardCategoriesRouteImport.update({
  getParentRoute: () => DashboardRouteRoute,
  id: '/categories',
  path: '/categories',
} as any)
const appNotAuthorizedRoute = appNotAuthorizedRouteImport.update({
  getParentRoute: () => appRouteRoute,
  id: '/not-authorized',
  path: '/not-authorized',
} as any)
const appAboutRoute = appAboutRouteImport.update({
  getParentRoute: () => appRouteRoute,
  id: '/about',
  path: '/about',
} as any)
const appprotectedRouteRoute = appprotectedRouteRouteImport.update({
  getParentRoute: () => appRouteRoute,
  id: '/(protected)',
} as any)
const appauthRouteRoute = appauthRouteRouteImport.update({
  getParentRoute: () => appRouteRoute,
  id: '/(auth)',
} as any)
const appauthSignUpRoute = appauthSignUpRouteImport.update({
  getParentRoute: () => appauthRouteRoute,
  id: '/sign-up',
  path: '/sign-up',
} as any)
const appauthSignInRoute = appauthSignInRouteImport.update({
  getParentRoute: () => appauthRouteRoute,
  id: '/sign-in',
  path: '/sign-in',
} as any)
const appprotectedProfileIndexRoute = appprotectedProfileIndexRouteImport.update({
  getParentRoute: () => appprotectedRouteRoute,
  id: '/profile/',
  path: '/profile/',
} as any)
const appprotectedProfileEditRoute = appprotectedProfileEditRouteImport.update({
  getParentRoute: () => appprotectedRouteRoute,
  id: '/profile/edit',
  path: '/profile/edit',
} as any)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof appAboutRoute
  '/not-authorized': typeof appNotAuthorizedRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/menu': typeof DashboardMenuRoute
  '/sign-in': typeof appauthSignInRoute
  '/sign-up': typeof appauthSignUpRoute
  '/profile/edit': typeof appprotectedProfileEditRoute
  '/profile': typeof appprotectedProfileIndexRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/': typeof appIndexRoute
  '/about': typeof appAboutRoute
  '/not-authorized': typeof appNotAuthorizedRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/menu': typeof DashboardMenuRoute
  '/sign-in': typeof appauthSignInRoute
  '/sign-up': typeof appauthSignUpRoute
  '/profile/edit': typeof appprotectedProfileEditRoute
  '/profile': typeof appprotectedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(app)': typeof appRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/(app)/(auth)': typeof appauthRouteRouteWithChildren
  '/(app)/(protected)': typeof appprotectedRouteRouteWithChildren
  '/(app)/about': typeof appAboutRoute
  '/(app)/not-authorized': typeof appNotAuthorizedRoute
  '/dashboard/categories': typeof DashboardCategoriesRoute
  '/dashboard/menu': typeof DashboardMenuRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/(auth)/sign-in': typeof appauthSignInRoute
  '/(app)/(auth)/sign-up': typeof appauthSignUpRoute
  '/(app)/(protected)/profile/edit': typeof appprotectedProfileEditRoute
  '/(app)/(protected)/profile/': typeof appprotectedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/not-authorized'
    | '/dashboard/categories'
    | '/dashboard/menu'
    | '/sign-in'
    | '/sign-up'
    | '/profile/edit'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/'
    | '/about'
    | '/not-authorized'
    | '/dashboard/categories'
    | '/dashboard/menu'
    | '/sign-in'
    | '/sign-up'
    | '/profile/edit'
    | '/profile'
  id:
    | '__root__'
    | '/(app)'
    | '/dashboard'
    | '/(app)/(auth)'
    | '/(app)/(protected)'
    | '/(app)/about'
    | '/(app)/not-authorized'
    | '/dashboard/categories'
    | '/dashboard/menu'
    | '/(app)/'
    | '/(app)/(auth)/sign-in'
    | '/(app)/(auth)/sign-up'
    | '/(app)/(protected)/profile/edit'
    | '/(app)/(protected)/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  appRouteRoute: typeof appRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/dashboard/menu': {
      id: '/dashboard/menu'
      path: '/menu'
      fullPath: '/dashboard/menu'
      preLoaderRoute: typeof DashboardMenuRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/categories': {
      id: '/dashboard/categories'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/(app)/not-authorized': {
      id: '/(app)/not-authorized'
      path: '/not-authorized'
      fullPath: '/not-authorized'
      preLoaderRoute: typeof appNotAuthorizedRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/about': {
      id: '/(app)/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof appAboutRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/(protected)': {
      id: '/(app)/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appprotectedRouteRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/(auth)': {
      id: '/(app)/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appauthRouteRouteImport
      parentRoute: typeof appRouteRoute
    }
    '/(app)/(auth)/sign-up': {
      id: '/(app)/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof appauthSignUpRouteImport
      parentRoute: typeof appauthRouteRoute
    }
    '/(app)/(auth)/sign-in': {
      id: '/(app)/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof appauthSignInRouteImport
      parentRoute: typeof appauthRouteRoute
    }
    '/(app)/(protected)/profile/': {
      id: '/(app)/(protected)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof appprotectedProfileIndexRouteImport
      parentRoute: typeof appprotectedRouteRoute
    }
    '/(app)/(protected)/profile/edit': {
      id: '/(app)/(protected)/profile/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof appprotectedProfileEditRouteImport
      parentRoute: typeof appprotectedRouteRoute
    }
  }
}

interface appauthRouteRouteChildren {
  appauthSignInRoute: typeof appauthSignInRoute
  appauthSignUpRoute: typeof appauthSignUpRoute
}

const appauthRouteRouteChildren: appauthRouteRouteChildren = {
  appauthSignInRoute: appauthSignInRoute,
  appauthSignUpRoute: appauthSignUpRoute,
}

const appauthRouteRouteWithChildren = appauthRouteRoute._addFileChildren(appauthRouteRouteChildren)

interface appprotectedRouteRouteChildren {
  appprotectedProfileEditRoute: typeof appprotectedProfileEditRoute
  appprotectedProfileIndexRoute: typeof appprotectedProfileIndexRoute
}

const appprotectedRouteRouteChildren: appprotectedRouteRouteChildren = {
  appprotectedProfileEditRoute: appprotectedProfileEditRoute,
  appprotectedProfileIndexRoute: appprotectedProfileIndexRoute,
}

const appprotectedRouteRouteWithChildren = appprotectedRouteRoute._addFileChildren(
  appprotectedRouteRouteChildren
)

interface appRouteRouteChildren {
  appauthRouteRoute: typeof appauthRouteRouteWithChildren
  appprotectedRouteRoute: typeof appprotectedRouteRouteWithChildren
  appAboutRoute: typeof appAboutRoute
  appNotAuthorizedRoute: typeof appNotAuthorizedRoute
  appIndexRoute: typeof appIndexRoute
}

const appRouteRouteChildren: appRouteRouteChildren = {
  appAboutRoute: appAboutRoute,
  appauthRouteRoute: appauthRouteRouteWithChildren,
  appIndexRoute: appIndexRoute,
  appNotAuthorizedRoute: appNotAuthorizedRoute,
  appprotectedRouteRoute: appprotectedRouteRouteWithChildren,
}

const appRouteRouteWithChildren = appRouteRoute._addFileChildren(appRouteRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardCategoriesRoute: typeof DashboardCategoriesRoute
  DashboardMenuRoute: typeof DashboardMenuRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCategoriesRoute: DashboardCategoriesRoute,
  DashboardMenuRoute: DashboardMenuRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren
)

const rootRouteChildren: RootRouteChildren = {
  appRouteRoute: appRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
