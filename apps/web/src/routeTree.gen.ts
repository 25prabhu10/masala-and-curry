/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppauthRouteRouteImport } from './routes/_app/(auth)/route'
import { Route as AppauthSignInRouteImport } from './routes/_app/(auth)/sign-in'
import { Route as AppauthSignUpRouteImport } from './routes/_app/(auth)/sign-up'
import { Route as AppprotectedCheckoutRouteImport } from './routes/_app/(protected)/checkout'
import { Route as AppprotectedProfileEditRouteImport } from './routes/_app/(protected)/profile/edit'
import { Route as AppprotectedProfileIndexRouteImport } from './routes/_app/(protected)/profile/index'
import { Route as AppprotectedRouteRouteImport } from './routes/_app/(protected)/route'
import { Route as AppAboutRouteImport } from './routes/_app/about'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppMenuRouteImport } from './routes/_app/menu'
import { Route as AppNotAuthorizedRouteImport } from './routes/_app/not-authorized'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as DashboardCategoriesCategoryIdEditRouteImport } from './routes/dashboard/categories/$category-id/edit'
import { Route as DashboardCategoriesIndexRouteImport } from './routes/dashboard/categories/index'
import { Route as DashboardCategoriesNewRouteImport } from './routes/dashboard/categories/new'
import { Route as DashboardCategoriesRouteRouteImport } from './routes/dashboard/categories/route'
import { Route as DashboardMenuItemsMenuItemIdEditRouteImport } from './routes/dashboard/menu-items/$menu-item-id/edit'
import { Route as DashboardMenuItemsIndexRouteImport } from './routes/dashboard/menu-items/index'
import { Route as DashboardMenuItemsNewRouteImport } from './routes/dashboard/menu-items/new'
import { Route as DashboardMenuItemsRouteRouteImport } from './routes/dashboard/menu-items/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/dashboard',
  path: '/dashboard',
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  getParentRoute: () => rootRouteImport,
  id: '/_app',
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  getParentRoute: () => AppRouteRoute,
  id: '/',
  path: '/',
} as any)
const AppNotAuthorizedRoute = AppNotAuthorizedRouteImport.update({
  getParentRoute: () => AppRouteRoute,
  id: '/not-authorized',
  path: '/not-authorized',
} as any)
const AppMenuRoute = AppMenuRouteImport.update({
  getParentRoute: () => AppRouteRoute,
  id: '/menu',
  path: '/menu',
} as any)
const AppAboutRoute = AppAboutRouteImport.update({
  getParentRoute: () => AppRouteRoute,
  id: '/about',
  path: '/about',
} as any)
const DashboardMenuItemsRouteRoute = DashboardMenuItemsRouteRouteImport.update({
  getParentRoute: () => DashboardRouteRoute,
  id: '/menu-items',
  path: '/menu-items',
} as any)
const DashboardCategoriesRouteRoute = DashboardCategoriesRouteRouteImport.update({
  getParentRoute: () => DashboardRouteRoute,
  id: '/categories',
  path: '/categories',
} as any)
const AppprotectedRouteRoute = AppprotectedRouteRouteImport.update({
  getParentRoute: () => AppRouteRoute,
  id: '/(protected)',
} as any)
const AppauthRouteRoute = AppauthRouteRouteImport.update({
  getParentRoute: () => AppRouteRoute,
  id: '/(auth)',
} as any)
const DashboardMenuItemsIndexRoute = DashboardMenuItemsIndexRouteImport.update({
  getParentRoute: () => DashboardMenuItemsRouteRoute,
  id: '/',
  path: '/',
} as any)
const DashboardCategoriesIndexRoute = DashboardCategoriesIndexRouteImport.update({
  getParentRoute: () => DashboardCategoriesRouteRoute,
  id: '/',
  path: '/',
} as any)
const DashboardMenuItemsNewRoute = DashboardMenuItemsNewRouteImport.update({
  getParentRoute: () => DashboardMenuItemsRouteRoute,
  id: '/new',
  path: '/new',
} as any)
const DashboardCategoriesNewRoute = DashboardCategoriesNewRouteImport.update({
  getParentRoute: () => DashboardCategoriesRouteRoute,
  id: '/new',
  path: '/new',
} as any)
const AppprotectedCheckoutRoute = AppprotectedCheckoutRouteImport.update({
  getParentRoute: () => AppprotectedRouteRoute,
  id: '/checkout',
  path: '/checkout',
} as any)
const AppauthSignUpRoute = AppauthSignUpRouteImport.update({
  getParentRoute: () => AppauthRouteRoute,
  id: '/sign-up',
  path: '/sign-up',
} as any)
const AppauthSignInRoute = AppauthSignInRouteImport.update({
  getParentRoute: () => AppauthRouteRoute,
  id: '/sign-in',
  path: '/sign-in',
} as any)
const AppprotectedProfileIndexRoute = AppprotectedProfileIndexRouteImport.update({
  getParentRoute: () => AppprotectedRouteRoute,
  id: '/profile/',
  path: '/profile/',
} as any)
const DashboardMenuItemsMenuItemIdEditRoute = DashboardMenuItemsMenuItemIdEditRouteImport.update({
  getParentRoute: () => DashboardMenuItemsRouteRoute,
  id: '/$menu-item-id/edit',
  path: '/$menu-item-id/edit',
} as any)
const DashboardCategoriesCategoryIdEditRoute = DashboardCategoriesCategoryIdEditRouteImport.update({
  getParentRoute: () => DashboardCategoriesRouteRoute,
  id: '/$category-id/edit',
  path: '/$category-id/edit',
} as any)
const AppprotectedProfileEditRoute = AppprotectedProfileEditRouteImport.update({
  getParentRoute: () => AppprotectedRouteRoute,
  id: '/profile/edit',
  path: '/profile/edit',
} as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/dashboard/categories': typeof DashboardCategoriesRouteRouteWithChildren
  '/dashboard/menu-items': typeof DashboardMenuItemsRouteRouteWithChildren
  '/about': typeof AppAboutRoute
  '/menu': typeof AppMenuRoute
  '/not-authorized': typeof AppNotAuthorizedRoute
  '/sign-in': typeof AppauthSignInRoute
  '/sign-up': typeof AppauthSignUpRoute
  '/checkout': typeof AppprotectedCheckoutRoute
  '/dashboard/categories/new': typeof DashboardCategoriesNewRoute
  '/dashboard/menu-items/new': typeof DashboardMenuItemsNewRoute
  '/dashboard/categories/': typeof DashboardCategoriesIndexRoute
  '/dashboard/menu-items/': typeof DashboardMenuItemsIndexRoute
  '/profile/edit': typeof AppprotectedProfileEditRoute
  '/dashboard/categories/$category-id/edit': typeof DashboardCategoriesCategoryIdEditRoute
  '/dashboard/menu-items/$menu-item-id/edit': typeof DashboardMenuItemsMenuItemIdEditRoute
  '/profile': typeof AppprotectedProfileIndexRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/about': typeof AppAboutRoute
  '/menu': typeof AppMenuRoute
  '/not-authorized': typeof AppNotAuthorizedRoute
  '/sign-in': typeof AppauthSignInRoute
  '/sign-up': typeof AppauthSignUpRoute
  '/checkout': typeof AppprotectedCheckoutRoute
  '/dashboard/categories/new': typeof DashboardCategoriesNewRoute
  '/dashboard/menu-items/new': typeof DashboardMenuItemsNewRoute
  '/dashboard/categories': typeof DashboardCategoriesIndexRoute
  '/dashboard/menu-items': typeof DashboardMenuItemsIndexRoute
  '/profile/edit': typeof AppprotectedProfileEditRoute
  '/dashboard/categories/$category-id/edit': typeof DashboardCategoriesCategoryIdEditRoute
  '/dashboard/menu-items/$menu-item-id/edit': typeof DashboardMenuItemsMenuItemIdEditRoute
  '/profile': typeof AppprotectedProfileIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/_app/(auth)': typeof AppauthRouteRouteWithChildren
  '/_app/(protected)': typeof AppprotectedRouteRouteWithChildren
  '/dashboard/categories': typeof DashboardCategoriesRouteRouteWithChildren
  '/dashboard/menu-items': typeof DashboardMenuItemsRouteRouteWithChildren
  '/_app/about': typeof AppAboutRoute
  '/_app/menu': typeof AppMenuRoute
  '/_app/not-authorized': typeof AppNotAuthorizedRoute
  '/_app/': typeof AppIndexRoute
  '/_app/(auth)/sign-in': typeof AppauthSignInRoute
  '/_app/(auth)/sign-up': typeof AppauthSignUpRoute
  '/_app/(protected)/checkout': typeof AppprotectedCheckoutRoute
  '/dashboard/categories/new': typeof DashboardCategoriesNewRoute
  '/dashboard/menu-items/new': typeof DashboardMenuItemsNewRoute
  '/dashboard/categories/': typeof DashboardCategoriesIndexRoute
  '/dashboard/menu-items/': typeof DashboardMenuItemsIndexRoute
  '/_app/(protected)/profile/edit': typeof AppprotectedProfileEditRoute
  '/dashboard/categories/$category-id/edit': typeof DashboardCategoriesCategoryIdEditRoute
  '/dashboard/menu-items/$menu-item-id/edit': typeof DashboardMenuItemsMenuItemIdEditRoute
  '/_app/(protected)/profile/': typeof AppprotectedProfileIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/'
    | '/dashboard/categories'
    | '/dashboard/menu-items'
    | '/about'
    | '/menu'
    | '/not-authorized'
    | '/sign-in'
    | '/sign-up'
    | '/checkout'
    | '/dashboard/categories/new'
    | '/dashboard/menu-items/new'
    | '/dashboard/categories/'
    | '/dashboard/menu-items/'
    | '/profile/edit'
    | '/dashboard/categories/$category-id/edit'
    | '/dashboard/menu-items/$menu-item-id/edit'
    | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/'
    | '/about'
    | '/menu'
    | '/not-authorized'
    | '/sign-in'
    | '/sign-up'
    | '/checkout'
    | '/dashboard/categories/new'
    | '/dashboard/menu-items/new'
    | '/dashboard/categories'
    | '/dashboard/menu-items'
    | '/profile/edit'
    | '/dashboard/categories/$category-id/edit'
    | '/dashboard/menu-items/$menu-item-id/edit'
    | '/profile'
  id:
    | '__root__'
    | '/_app'
    | '/dashboard'
    | '/_app/(auth)'
    | '/_app/(protected)'
    | '/dashboard/categories'
    | '/dashboard/menu-items'
    | '/_app/about'
    | '/_app/menu'
    | '/_app/not-authorized'
    | '/_app/'
    | '/_app/(auth)/sign-in'
    | '/_app/(auth)/sign-up'
    | '/_app/(protected)/checkout'
    | '/dashboard/categories/new'
    | '/dashboard/menu-items/new'
    | '/dashboard/categories/'
    | '/dashboard/menu-items/'
    | '/_app/(protected)/profile/edit'
    | '/dashboard/categories/$category-id/edit'
    | '/dashboard/menu-items/$menu-item-id/edit'
    | '/_app/(protected)/profile/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/not-authorized': {
      id: '/_app/not-authorized'
      path: '/not-authorized'
      fullPath: '/not-authorized'
      preLoaderRoute: typeof AppNotAuthorizedRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/menu': {
      id: '/_app/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof AppMenuRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/dashboard/menu-items': {
      id: '/dashboard/menu-items'
      path: '/menu-items'
      fullPath: '/dashboard/menu-items'
      preLoaderRoute: typeof DashboardMenuItemsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/categories': {
      id: '/dashboard/categories'
      path: '/categories'
      fullPath: '/dashboard/categories'
      preLoaderRoute: typeof DashboardCategoriesRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_app/(protected)': {
      id: '/_app/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppprotectedRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/(auth)': {
      id: '/_app/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppauthRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/dashboard/menu-items/': {
      id: '/dashboard/menu-items/'
      path: '/'
      fullPath: '/dashboard/menu-items/'
      preLoaderRoute: typeof DashboardMenuItemsIndexRouteImport
      parentRoute: typeof DashboardMenuItemsRouteRoute
    }
    '/dashboard/categories/': {
      id: '/dashboard/categories/'
      path: '/'
      fullPath: '/dashboard/categories/'
      preLoaderRoute: typeof DashboardCategoriesIndexRouteImport
      parentRoute: typeof DashboardCategoriesRouteRoute
    }
    '/dashboard/menu-items/new': {
      id: '/dashboard/menu-items/new'
      path: '/new'
      fullPath: '/dashboard/menu-items/new'
      preLoaderRoute: typeof DashboardMenuItemsNewRouteImport
      parentRoute: typeof DashboardMenuItemsRouteRoute
    }
    '/dashboard/categories/new': {
      id: '/dashboard/categories/new'
      path: '/new'
      fullPath: '/dashboard/categories/new'
      preLoaderRoute: typeof DashboardCategoriesNewRouteImport
      parentRoute: typeof DashboardCategoriesRouteRoute
    }
    '/_app/(protected)/checkout': {
      id: '/_app/(protected)/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof AppprotectedCheckoutRouteImport
      parentRoute: typeof AppprotectedRouteRoute
    }
    '/_app/(auth)/sign-up': {
      id: '/_app/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AppauthSignUpRouteImport
      parentRoute: typeof AppauthRouteRoute
    }
    '/_app/(auth)/sign-in': {
      id: '/_app/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AppauthSignInRouteImport
      parentRoute: typeof AppauthRouteRoute
    }
    '/_app/(protected)/profile/': {
      id: '/_app/(protected)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppprotectedProfileIndexRouteImport
      parentRoute: typeof AppprotectedRouteRoute
    }
    '/dashboard/menu-items/$menu-item-id/edit': {
      id: '/dashboard/menu-items/$menu-item-id/edit'
      path: '/$menu-item-id/edit'
      fullPath: '/dashboard/menu-items/$menu-item-id/edit'
      preLoaderRoute: typeof DashboardMenuItemsMenuItemIdEditRouteImport
      parentRoute: typeof DashboardMenuItemsRouteRoute
    }
    '/dashboard/categories/$category-id/edit': {
      id: '/dashboard/categories/$category-id/edit'
      path: '/$category-id/edit'
      fullPath: '/dashboard/categories/$category-id/edit'
      preLoaderRoute: typeof DashboardCategoriesCategoryIdEditRouteImport
      parentRoute: typeof DashboardCategoriesRouteRoute
    }
    '/_app/(protected)/profile/edit': {
      id: '/_app/(protected)/profile/edit'
      path: '/profile/edit'
      fullPath: '/profile/edit'
      preLoaderRoute: typeof AppprotectedProfileEditRouteImport
      parentRoute: typeof AppprotectedRouteRoute
    }
  }
}

interface AppauthRouteRouteChildren {
  AppauthSignInRoute: typeof AppauthSignInRoute
  AppauthSignUpRoute: typeof AppauthSignUpRoute
}

const AppauthRouteRouteChildren: AppauthRouteRouteChildren = {
  AppauthSignInRoute: AppauthSignInRoute,
  AppauthSignUpRoute: AppauthSignUpRoute,
}

const AppauthRouteRouteWithChildren = AppauthRouteRoute._addFileChildren(AppauthRouteRouteChildren)

interface AppprotectedRouteRouteChildren {
  AppprotectedCheckoutRoute: typeof AppprotectedCheckoutRoute
  AppprotectedProfileEditRoute: typeof AppprotectedProfileEditRoute
  AppprotectedProfileIndexRoute: typeof AppprotectedProfileIndexRoute
}

const AppprotectedRouteRouteChildren: AppprotectedRouteRouteChildren = {
  AppprotectedCheckoutRoute: AppprotectedCheckoutRoute,
  AppprotectedProfileEditRoute: AppprotectedProfileEditRoute,
  AppprotectedProfileIndexRoute: AppprotectedProfileIndexRoute,
}

const AppprotectedRouteRouteWithChildren = AppprotectedRouteRoute._addFileChildren(
  AppprotectedRouteRouteChildren
)

interface AppRouteRouteChildren {
  AppauthRouteRoute: typeof AppauthRouteRouteWithChildren
  AppprotectedRouteRoute: typeof AppprotectedRouteRouteWithChildren
  AppAboutRoute: typeof AppAboutRoute
  AppMenuRoute: typeof AppMenuRoute
  AppNotAuthorizedRoute: typeof AppNotAuthorizedRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppauthRouteRoute: AppauthRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppMenuRoute: AppMenuRoute,
  AppNotAuthorizedRoute: AppNotAuthorizedRoute,
  AppprotectedRouteRoute: AppprotectedRouteRouteWithChildren,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(AppRouteRouteChildren)

interface DashboardCategoriesRouteRouteChildren {
  DashboardCategoriesNewRoute: typeof DashboardCategoriesNewRoute
  DashboardCategoriesIndexRoute: typeof DashboardCategoriesIndexRoute
  DashboardCategoriesCategoryIdEditRoute: typeof DashboardCategoriesCategoryIdEditRoute
}

const DashboardCategoriesRouteRouteChildren: DashboardCategoriesRouteRouteChildren = {
  DashboardCategoriesCategoryIdEditRoute: DashboardCategoriesCategoryIdEditRoute,
  DashboardCategoriesIndexRoute: DashboardCategoriesIndexRoute,
  DashboardCategoriesNewRoute: DashboardCategoriesNewRoute,
}

const DashboardCategoriesRouteRouteWithChildren = DashboardCategoriesRouteRoute._addFileChildren(
  DashboardCategoriesRouteRouteChildren
)

interface DashboardMenuItemsRouteRouteChildren {
  DashboardMenuItemsNewRoute: typeof DashboardMenuItemsNewRoute
  DashboardMenuItemsIndexRoute: typeof DashboardMenuItemsIndexRoute
  DashboardMenuItemsMenuItemIdEditRoute: typeof DashboardMenuItemsMenuItemIdEditRoute
}

const DashboardMenuItemsRouteRouteChildren: DashboardMenuItemsRouteRouteChildren = {
  DashboardMenuItemsIndexRoute: DashboardMenuItemsIndexRoute,
  DashboardMenuItemsMenuItemIdEditRoute: DashboardMenuItemsMenuItemIdEditRoute,
  DashboardMenuItemsNewRoute: DashboardMenuItemsNewRoute,
}

const DashboardMenuItemsRouteRouteWithChildren = DashboardMenuItemsRouteRoute._addFileChildren(
  DashboardMenuItemsRouteRouteChildren
)

interface DashboardRouteRouteChildren {
  DashboardCategoriesRouteRoute: typeof DashboardCategoriesRouteRouteWithChildren
  DashboardMenuItemsRouteRoute: typeof DashboardMenuItemsRouteRouteWithChildren
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCategoriesRouteRoute: DashboardCategoriesRouteRouteWithChildren,
  DashboardMenuItemsRouteRoute: DashboardMenuItemsRouteRouteWithChildren,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
